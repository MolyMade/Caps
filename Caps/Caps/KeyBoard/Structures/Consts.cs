namespace Caps.KeyBoard.Structures
{
	public static class Modifiers
	{
		public const int Ctrl = 0x0800;
		public const int Shift = 0x0400;
		public const int Alt = 0x0200;
		public const int Win = 0x0100;
	}

	public static class HookType
	{
		public const int WhKeyboardLl = 13;
		public const int WhMouseLl = 14;
	}

	public static class KeyEvents
	{
		public const uint KeyeventfKeydown = 0x0000;
		public const uint KeyeventfExtendedkey = 0x0001;
		public const uint  KeyeventfKeyup = 0x0002;
	}

	internal static class VkCodes
	{
		public const byte VkLbutton = 0x01; //Left mouse button
		public const byte VkRbutton = 0x02; //Right mouse button
		public const byte VkCancel = 0x03; //Control-break processing
		public const byte VkMbutton = 0x04; //Middle mouse button (three-button mouse)
		public const byte VkXbutton1 = 0x05; //X1 mouse button
		public const byte VkXbutton2 = 0x06; //X2 mouse button
		public const byte VkBack = 0x08; //BACKSPACE key
		public const byte VkTab = 0x09; //TAB key
		public const byte VkClear = 0x0C; //CLEAR key
		public const byte VkReturn = 0x0D; //ENTER key
		public const byte VkShift = 0x10; //SHIFT key
		public const byte VkControl = 0x11; //CTRL key
		public const byte VkMenu = 0x12; //ALT key
		public const byte VkPause = 0x13; //PAUSE key
		public const byte VkCapital = 0x14; //CAPS LOCK key
		public const byte VkKana = 0x15; //IME Kana mode
		public const byte VkHanguel = 0x15; //IME Hanguel mode 
		public const byte VkHangul = 0x15; //IME Hangul mode
		public const byte VkJunja = 0x17; //IME Junja mode
		public const byte VkFinal = 0x18; //IME final mode
		public const byte VkHanja = 0x19; //IME Hanja mode
		public const byte VkKanji = 0x19; //IME Kanji mode
		public const byte VkEscape = 0x1B; //ESC key
		public const byte VkConvert = 0x1C; //IME convert
		public const byte VkNonconvert = 0x1D; //IME nonconvert
		public const byte VkAccept = 0x1E; //IME accept
		public const byte VkModechange = 0x1F; //IME mode change request
		public const byte VkSpace = 0x20; //SPACEBAR
		public const byte VkPrior = 0x21; //PAGE UP key
		public const byte VkNext = 0x22; //PAGE DOWN key
		public const byte VkEnd = 0x23; //END key
		public const byte VkHome = 0x24; //HOME key
		public const byte VkLeft = 0x25; //LEFT ARROW key
		public const byte VkUp = 0x26; //UP ARROW key
		public const byte VkRight = 0x27; //RIGHT ARROW key
		public const byte VkDown = 0x28; //DOWN ARROW key
		public const byte VkSelect = 0x29; //SELECT key
		public const byte VkPRbyte = 0x2A; //PRbyte key
		public const byte VkExecute = 0x2B; //EXECUTE key
		public const byte VkSnapshot = 0x2C; //PRbyte SCREEN key
		public const byte VkInsert = 0x2D; //INS key
		public const byte VkDelete = 0x2E; //DEL key
		public const byte VkHelp = 0x2F; //HELP key
		public const byte Vk0 = 0x30; //0 key
		public const byte Vk1 = 0x31; //1 key
		public const byte Vk2 = 0x32; //2 key
		public const byte Vk3 = 0x33; //3 key
		public const byte Vk4 = 0x34; //4 key
		public const byte Vk5 = 0x35; //5 key
		public const byte Vk6 = 0x36; //6 key
		public const byte Vk7 = 0x37; //7 key
		public const byte Vk8 = 0x38; //8 key
		public const byte Vk9 = 0x39; //9 key
		public const byte VkA = 0x41; //A key
		public const byte VkB = 0x42; //B key
		public const byte VkC = 0x43; //C key
		public const byte VkD = 0x44; //D key
		public const byte VkE = 0x45; //E key
		public const byte VkF = 0x46; //F key
		public const byte VkG = 0x47; //G key
		public const byte VkH = 0x48; //H key
		public const byte VkI = 0x49; //I key
		public const byte VkJ = 0x4A; //J key
		public const byte VkK = 0x4B; //K key
		public const byte VkL = 0x4C; //L key
		public const byte VkM = 0x4D; //M key
		public const byte VkN = 0x4E; //N key
		public const byte VkO = 0x4F; //O key
		public const byte VkP = 0x50; //P key
		public const byte VkQ = 0x51; //Q key
		public const byte VkR = 0x52; //R key
		public const byte VkS = 0x53; //S key
		public const byte VkT = 0x54; //T key
		public const byte VkU = 0x55; //U key
		public const byte VkV = 0x56; //V key
		public const byte VkW = 0x57; //W key
		public const byte VkX = 0x58; //X key
		public const byte VkY = 0x59; //Y key
		public const byte VkZ = 0x5A; //Z key
		public const byte VkLwin = 0x5B; //Left Windows key (Natural keyboard)
		public const byte VkRwin = 0x5C; //Right Windows key (Natural keyboard)
		public const byte VkApps = 0x5D; //Applications key (Natural keyboard)
		public const byte VkSleep = 0x5F; //Computer Sleep key
		public const byte VkNumpad0 = 0x60; //Numeric keypad 0 key
		public const byte VkNumpad1 = 0x61; //Numeric keypad 1 key
		public const byte VkNumpad2 = 0x62; //Numeric keypad 2 key
		public const byte VkNumpad3 = 0x63; //Numeric keypad 3 key
		public const byte VkNumpad4 = 0x64; //Numeric keypad 4 key
		public const byte VkNumpad5 = 0x65; //Numeric keypad 5 key
		public const byte VkNumpad6 = 0x66; //Numeric keypad 6 key
		public const byte VkNumpad7 = 0x67; //Numeric keypad 7 key
		public const byte VkNumpad8 = 0x68; //Numeric keypad 8 key
		public const byte VkNumpad9 = 0x69; //Numeric keypad 9 key
		public const byte VkMultiply = 0x6A; //Multiply key
		public const byte VkAdd = 0x6B; //Add key
		public const byte VkSeparator = 0x6C; //Separator key
		public const byte VkSubtract = 0x6D; //Subtract key
		public const byte VkDecimal = 0x6E; //Decimal key
		public const byte VkDivide = 0x6F; //Divide key
		public const byte VkF1 = 0x70; //F1 key
		public const byte VkF2 = 0x71; //F2 key
		public const byte VkF3 = 0x72; //F3 key
		public const byte VkF4 = 0x73; //F4 key
		public const byte VkF5 = 0x74; //F5 key
		public const byte VkF6 = 0x75; //F6 key
		public const byte VkF7 = 0x76; //F7 key
		public const byte VkF8 = 0x77; //F8 key
		public const byte VkF9 = 0x78; //F9 key
		public const byte VkF10 = 0x79; //F10 key
		public const byte VkF11 = 0x7A; //F11 key
		public const byte VkF12 = 0x7B; //F12 key
		public const byte VkF13 = 0x7C; //F13 key
		public const byte VkF14 = 0x7D; //F14 key
		public const byte VkF15 = 0x7E; //F15 key
		public const byte VkF16 = 0x7F; //F16 key
		public const byte VkF17 = 0x80; //F17 key
		public const byte VkF18 = 0x81; //F18 key
		public const byte VkF19 = 0x82; //F19 key
		public const byte VkF20 = 0x83; //F20 key
		public const byte VkF21 = 0x84; //F21 key
		public const byte VkF22 = 0x85; //F22 key
		public const byte VkF23 = 0x86; //F23 key
		public const byte VkF24 = 0x87; //F24 key
		public const byte VkNumlock = 0x90; //NUM LOCK key
		public const byte VkScroll = 0x91; //SCROLL LOCK key
		public const byte VkLshift = 0xA0; //Left SHIFT key
		public const byte VkRshift = 0xA1; //Right SHIFT key
		public const byte VkLcontrol = 0xA2; //Left CONTROL key
		public const byte VkRcontrol = 0xA3; //Right CONTROL key
		public const byte VkLmenu = 0xA4; //Left MENU key
		public const byte VkRmenu = 0xA5; //Right MENU key
		public const byte VkBrowserBack = 0xA6; //Browser Back key
		public const byte VkBrowserForward = 0xA7; //Browser Forward key
		public const byte VkBrowserRefresh = 0xA8; //Browser Refresh key
		public const byte VkBrowserStop = 0xA9; //Browser Stop key
		public const byte VkBrowserSearch = 0xAA; //Browser Search key
		public const byte VkBrowserFavorites = 0xAB; //Browser Favorites key
		public const byte VkBrowserHome = 0xAC; //Browser Start and Home key
		public const byte VkVolumeMute = 0xAD; //Volume Mute key
		public const byte VkVolumeDown = 0xAE; //Volume Down key
		public const byte VkVolumeUp = 0xAF; //Volume Up key
		public const byte VkMediaNextTrack = 0xB0; //Next Track key
		public const byte VkMediaPrevTrack = 0xB1; //Previous Track key
		public const byte VkMediaStop = 0xB2; //Stop Media key
		public const byte VkMediaPlayPause = 0xB3; //Play/Pause Media key
		public const byte VkLaunchMail = 0xB4; //Start Mail key
		public const byte VkLaunchMediaSelect = 0xB5; //Select Media key
		public const byte VkLaunchApp1 = 0xB6; //Start Application 1 key
		public const byte VkLaunchApp2 = 0xB7; //Start Application 2 key
		public const byte VkOem1 = 0xBA; //Used for miscellaneous characters; it can vary by keyboard.
		public const byte VkOemPlus = 0xBB; //For any country/region, the '+' key
		public const byte VkOemComma = 0xBC; //For any country/region, the ',' key
		public const byte VkOemMinus = 0xBD; //For any country/region, the '-' key
		public const byte VkOemPeriod = 0xBE; //For any country/region, the '.' key
		public const byte VkOem2 = 0xBF; //Used for miscellaneous characters; it can vary by keyboard.
		public const byte VkOem3 = 0xC0; //Used for miscellaneous characters; it can vary by keyboard.
		public const byte VkLBrace = 0xDB; //大括号
		public const byte VkOem5 = 0xDC; //
		public const byte VkRBrace = 0xDD; //大括号
		public const byte VkQuote = 0xDE; // 引号
		public const byte VkOem8 = 0xDF; //Used for miscellaneous characters; it can vary by keyboard.
		public const byte VkOem102 = 0xE2; //Either the angle bracket key or the backslash key on the RT 102-key keyboard
		public const byte VkProcesskey = 0xE5; //IME PROCESS key
		public const byte VkPacket = 0xE7; //Used to pass Unicode characters as if they were keystrokes.
		public const byte VkAttn = 0xF6; //Attn key
		public const byte VkCrsel = 0xF7; //CrSel key
		public const byte VkExsel = 0xF8; //ExSel key
		public const byte VkEreof = 0xF9; //Erase EOF key
		public const byte VkPlay = 0xFA; //Play key
		public const byte VkZoom = 0xFB; //Zoom key
		public const byte VkNoname = 0xFC; //Reserved
		public const byte VkPa1 = 0xFD; //PA1 key
		public const byte VkOemClear = 0xFE; //Clear key
	}
}